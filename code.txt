import json

def modify_json(file_path, attribute_path, new_value):
    """
    修改JSON文件中指定嵌套属性的值
    
    :param file_path: JSON文件路径
    :param attribute_path: 嵌套属性路径（用点号分隔，如'send.nav'）
    :param new_value: 要设置的新值
    :raises KeyError: 如果属性路径不存在
    :raises TypeError: 如果中间节点不是字典类型
    """
    keys = attribute_path.split('.')
    if len(keys) == 0:
        raise ValueError("Attribute path cannot be empty")

    # 读取JSON数据
    with open(file_path, 'r') as f:
        data = json.load(f)

    current = data
    # 遍历到目标属性的父级
    for i, key in enumerate(keys[:-1]):
        if not isinstance(current, dict):
            raise TypeError(f"Expected dict at '{'.'.join(keys[:i+1])}' in path")
        if key not in current:
            raise KeyError(f"Key '{'.'.join(keys[:i+1])}' not found")
        current = current[key]

    # 修改目标属性值
    last_key = keys[-1]
    if not isinstance(current, dict):
        raise TypeError(f"Expected dict at '{'.'.join(keys[:-1])}' in path")
    if last_key not in current:
        raise KeyError(f"Key '{attribute_path}' not found")
    current[last_key] = new_value

    # 写回文件
    with open(file_path, 'w') as f:
        json.dump(data, f, indent=2)

# 使用示例
if __name__ == "__main__":
    # 示例：修改send.nav属性的值
    modify_json('example.json', 'send.nav', [1, 2, 3])